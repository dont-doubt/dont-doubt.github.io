var i,
  bet_count = 0,
  total_stake = $("#total_stake").val(),
  status = !0,
  loader_html =
    '<div class="loading-wrapper content-relative"><div class="page-overlay"><div class="loader-ring"></div></div></div>';


/**
 * Вызывает ошибку, стираем
 * No 'Access-Control-Allow-Origin' header is present on the requested resource
 */
function get_promo_offers() {
  /*var t = $(".sportsbooks-state-menu ul li.active span").data("location");
  $.ajax({
    // url: "index.php/Arbitrage_calculator/sportsbook_promotion",
    url: "https://arbitragecalc.com/Arbitrage_calculator/sportsbook_promotion",
    headers: { "X-Robots-Tag": "noindex" },
    type: "GET",
    dataType: "html",
    cache: !1,
    data: { location_val: t },
    beforeSend: function () {
      $(".sportsbooks-list-block").html(loader_html);
    },
    success: function (t) {
      $(".sportsbooks-list-block").html(t),
        $(".sportsbooks-list")
          .owlCarousel({
            items: 3,
            margin: 10,
            loop: !0,
            autoplay: !0,
            autoplayTimeout: 5e3,
            autoWidth: !1,
            dots: !0,
            nav: !0,
            mouseDrag: !0,
            navText: [
              '<span title="prev"><i class="fa fa-chevron-circle-left"></i></span>',
              '<span title="next"><i class="fa fa-chevron-circle-right"></i></span>',
            ],
            responsive: {
              0: { items: 1 },
              600: { items: 2 },
              1e3: { items: 3 },
              1200: { items: 3 },
            },
          })
          .on("dragged.owl.carousel", function (t) {
            $(this).trigger("stop.owl.autoplay");
          });
    },
    error: function (t) {
      console.log(t);
    },
  });*/
}


/**
 * Проверяет все остальные поля кроме total_stake на то чтобы это были числа
 * Изменяет status, у которого true означает валидность,
 * 
 * во всех циклах i - айди поля "odds_$i", начиная с 1
 */
function validate_bet() {
  for (
    status = !0,
      exist_bet_count = 0,
      bet_count = $(".arbitrage-bet-row").length,
      i = 1;
    i <= bet_count;
    i++
  )
    "" == $("#odds_" + i).val() || null == $("#odds_" + i).val()
      ? ($("#stake_" + i).text("$0.00"),
        $("#payout_" + i).text("$0.00"),
        $("#total_payout, #total_profit").text("$0.00"),
        $("#roi").text("0.00"))
      : exist_bet_count++;
  if (0 == exist_bet_count || 1 == exist_bet_count)
    for (status = !1, i = 1; i <= bet_count; i++) {
      var t;
      ("" != $("#odds_" + i).val() && null != $("#odds_" + i).val()) ||
        $("#odds_" + i)
          .attr("placeholder", "Please Enter Bet " + i + " Odds.")
          .addClass("error-class")
          .val(""),
        $("#submit_arbitrage").removeClass("active"),
        update_url($("#base_url").val()),
        $("#copy_content").val(""),
        $(".copy-code").trigger("click"),
        $(".copy-code").html('<i class="fa fa-file-o"></i> <span>Copy</span>');
    }
  if (1 == status || "true" == status)
    for (i = 1; i <= bet_count; i++)
      "" != $("#odds_" + i).val() &&
        null != $("#odds_" + i).val() &&
        (("" != (t = convert_odds("odds_" + i, $("#odds_" + i).val())) &&
          null != t &&
          "undefined" != t) ||
          ((status = !1),
          $("#stake_" + i).text("$0.00"),
          $("#payout_" + i).text("$0.00"),
          $("#total_payout, #total_profit").text("$0.00"),
          $("#roi").text("0.00"),
          $("#odds_" + i)
            .attr("placeholder", "Please Enter Valid Bet " + i + " Odds")
            .addClass("error-class")
            .val("")));
  else {
    for (i = 1; i <= bet_count; i++)
      $("#stake_" + i).text("$0.00"), $("#payout_" + i).text("$0.00");
    $("#total_payout, #total_profit").text("$0.00"), $("#roi").text("0.00");
  }
  return status;
}

/**
 * Проверяет total_stake на то чтобы это было число
 */
function validate_stake() {
  var t = !0;
  return (
    "" == (total_stake = $("#total_stake").val()) || null == total_stake
      ? ((t = !1),
        $("#total_stake")
          .attr("placeholder", "Please Enter Stake")
          .addClass("error-class")
          .val(""))
      : "" == total_stake ||
        null == total_stake ||
        ("." != total_stake &&
          /^[0-9.+-]+$/.test(total_stake) &&
          parseFloat(total_stake) != parseFloat(0)) ||
        ((t = !1),
        $("#total_stake")
          .attr("placeholder", "Please Enter Valid Stake")
          .addClass("error-class")
          .val("")),
    t
  );
}

/**
 * Обернутая функция которая вызывает и проверяет
 * оригинальную функцию на вычисление ставки
 * 
 * asynchronous для производительности благодаря параллельному выполнению
 */
async function calculate_bet_stake() {
	// насколько увеличить число при каждом проходе через цикл
	var precision = 0.01;

	// лимит проходов через цикл 
	var limit = 12000;

	var roundTo = parseInt($("#round_to").val());
	calculate_bet_stake_original();
	if (isNaN(roundTo)) return; // если ничего не введено
	
	var fieldId = parseInt($("#field_id").val());
	if (isNaN(fieldId)) {
		setRoundInfo("Unresolved field id");
		return;
	}
	var totalFieldCount = $(".arbitrage-bet-row").length;
	if (fieldId < 1 || fieldId > totalFieldCount) {
		setRoundInfo(`Field id is out of range [1, ${totalFieldCount}]`)
		return;
	}

	var stakeBetResult = getStakeBetResult(fieldId);
	var nearestNums = getNearestRoundedNumbers(stakeBetResult, roundTo);
	if (nearestNums[0] == nearestNums[1]) return; // если уже округленное

	var nearest = getNearest(stakeBetResult, nearestNums);
	var originalStake = getStakeField();
	var inversed = stakeBetResult < nearest;
	var diff = roundTo; // разница не может быть больше чем roundTo
	
	var prevStake;
	for (newStake = originalStake, iters = 0; ;
			  prevStake = newStake,
			  newStake += (inversed ? precision : -precision), 
				iters++) {
		if (newStake <= 0) break;
		if (iters > limit) {
			setRoundInfo("Too many iterations");
			calculate_bet_stake_original();
			return;
		}
		calculate_bet_stake_original(newStake);
		var newStakeBetResult = getStakeBetResult(fieldId);
		var newDiff = Math.abs(newStakeBetResult - nearest)
		if (newDiff <= diff) {
			diff = newDiff;
		} else {
			break;
		}
	}
	calculate_bet_stake_original(prevStake);
	setRoundInfo("Stake was rounded to " + Math.round(prevStake * 1000) / 1000)
}

function getStakeField() {
	return parseFloat($("#total_stake").val());
}

function setRoundInfo(n = "Stake wasn't rounded") {
	$("#round_info").text(n);
}

function getStakeBetResult(id) {
	var text = $("#stake_" + id).text();
	if (text == "") return NaN
	return parseFloat(text.slice(1))
}

function getNearest(num, nearestNums) {
	if (nearestNums[0] <= 0) return nearestNums[1];
	var diff0 = Math.abs(num - nearestNums[0])
	var diff1 = Math.abs(num - nearestNums[1])
	return nearestNums[diff0 < diff1 ? 0 : 1];
}

/**
 * Возвращает два числа, 
 * первое - нижнее округленное число, 
 * второе - верхнее округленное число;
 * 
 * Возвращает два одинаковых числа если число уже круглое
 */
function getNearestRoundedNumbers(value, roundTo)/*: Array[Lower, Greater] */ {
	return [Math.floor(value / roundTo) * roundTo, 
					Math.ceil(value / roundTo) * roundTo];
}

/**
 * Функция где как раз таки вычисляется ставка
 */
function calculate_bet_stake_original(total_stake) {
  total_stake ||= $("#total_stake").val();
  var t = 0,
    e = 0;
  for (bet_count = $(".arbitrage-bet-row").length, i = 1; i <= bet_count; i++)
    if ("" != $("#odds_" + i).val() && null != $("#odds_" + i).val()) {
      var a = "";
      ((a = convert_odds("odds_" + i, $("#odds_" + i).val())),
      (1 == status || "true" == status) && "" != a && null != a && a > 1)
        ? (e = parseFloat(1 / a) + e)
        : 1 == a && error_message("odds_" + i);
    }
  e = parseFloat(1 / e);
  var o = 0;
  for (i = 1; i <= bet_count; i++)
    if (
      "" != $("#odds_" + i).val() &&
      null != $("#odds_" + i).val() &&
      ((a = ""),
      (a = convert_odds("odds_" + i, $("#odds_" + i).val())),
      (1 == status || "true" == status) && "" != a && null != a && a > 1)
    ) {
      var s = 0,
        r = 0,
        l = parseFloat(1 / a) * e,
        n =
          ((s = parseFloat(l) * parseFloat(total_stake)),
          (r = parseFloat(s) * a),
          parseFloat(1 / a) * parseFloat(total_stake));
      $("#stake_" + i).text("$" + s.toFixed(2)),
        parseFloat(a),
        parseFloat(n),
        $("#payout_" + i).text("$" + r.toFixed(2)),
        (t = parseFloat(r) + parseFloat(t)),
        o++;
    }
  if (1 == status || "true" == status) {
    (t = parseFloat(t) / parseFloat(o)),
      $("#total_payout").text("$" + t.toFixed(2));
    var c = parseFloat(t) - parseFloat(total_stake);
    c >= 0
      ? $("#total_profit").text("$" + c.toFixed(2))
      : $("#total_profit").text("-$" + Math.abs(c).toFixed(2));
    var d = ((parseFloat(c) / parseFloat(total_stake)) * 100).toFixed(2);
    $("#roi").text(d + "%"),
      track_user_activity(
        "button_clicked",
        "home",
        "clicked_button_name",
        "calculate"
      );
  }
  var u = "",
    _ = [];
  for (i = 1; i <= bet_count; i++)
    "" != $("#odds_" + i).val() &&
      null != $("#odds_" + i).val() &&
      _.push("bet" + i + "=" + $("#odds_" + i).val());
  _.length > 0 && (u = "?" + _.join("&"));
  var p = $("#base_url").val();
  status && (p = p + (u = u.replace(" ", "+")) + "&stake=" + total_stake),
    update_url(p);
}

/**
 * [t = odds_1, e = 2.2] [result = 2.200]
 * [t = odds_2, e = 2] [result = 2.000]
 */
function convert_odds(t, e) {
  if ("" != e && null != e && "undefined" != e && 0 != e) {
    var a = e.split("."),
      o = e.split("/"),
      s = (aus_odds = uk_odds = "");
    if ("" != a && null != a && null == o[1]) {
      if ("+" != e.charAt(0) && "-" != e.charAt(0)) {
        if (e > 1) {
          var r = Math.pow(
              10,
              ((update_odds = round_two_digit(e - 1)) + ".").split(".")[1]
                .length
            ),
            l = round_two_digit(update_odds * r),
            n = calculate_gcd(l, r);
          if (
            ((uk_odds = l / n + "/" + r / n),
            e <= 100 &&
              (uk_odds = odds_conversion_decimal_to_fraction_odds(
                (e = parseFloat(e).toFixed(3))
              )),
            e >= 2 ? (s = 100 * (e - 1)) : e < 2 && (s = -100 / (e - 1)),
            (s = e > 1 ? Math.round(s) : "N/A"),
            parseFloat(e) != 1 / 0 &&
              "NaN" != parseFloat(e) &&
              uk_odds != 1 / 0 &&
              NaN != uk_odds &&
              s != 1 / 0 &&
              NaN != s &&
              0 != $.isNumeric(e))
          )
            return parseFloat(e).toFixed(3);
          error_message(t);
        } else error_message(t);
      } else {
        if (
          (((update_odds = parseFloat(e)), "-" == e.charAt(0))
            ? ((numerator =
                100 / (n = calculate_gcd(100, (update_odds = -update_odds)))),
              (denominator = update_odds / n),
              (aus_odds = 100 / update_odds + 1))
            : ((n = calculate_gcd(100, update_odds)),
              (numerator = update_odds / n),
              (denominator = 100 / n),
              (aus_odds = update_odds / 100 + 1)),
          (uk_odds = numerator + "/" + denominator),
          aus_odds <= 100 &&
            (uk_odds = odds_conversion_decimal_to_fraction_odds(
              (aus_odds = parseFloat(aus_odds).toFixed(3))
            )),
          (aus_odds = isNaN(e) ? "N/A" : parseFloat(aus_odds).toFixed(3)),
          e != 1 / 0 &&
            "NaN" != e &&
            uk_odds != 1 / 0 &&
            NaN != uk_odds &&
            s != 1 / 0 &&
            NaN != s &&
            0 != $.isNumeric(e))
        )
          return aus_odds;
        error_message(t);
      }
    } else if ("" != o[1] && null != o[1]) {
      if (
        ((aus_odds = o[0] / o[1] + 1),
        (s = Math.round(
          (s =
            parseInt(o[0]) > parseInt(o[1])
              ? (o[0] / o[1]) * 100
              : -100 / (o[0] / o[1]))
        )),
        "Infinity" != e &&
          "Infinity" != aus_odds &&
          !isNaN(aus_odds) &&
          "Infinity" != s &&
          !isNaN(s))
      )
        return parseFloat(aus_odds).toFixed(3);
      error_message(t);
    }
  }
}

function odds_conversion_decimal_to_fraction_odds(t) {
  var e = countDecimals(t),
    a = "";
  if (
    ($.each(
      {
        "1/100": "1.01",
        "1/50": "1.02",
        "1/33": "1.0303",
        "1/25": "1.04",
        "1/10": "1.1",
        "1/8": "1.125",
        "1/7": "1.143",
        "1/6": "1.167",
        "1/5": "1.2",
        "2/9": "1.222",
        "1/4": "1.25",
        "2/7": "1.286",
        "3/10": "1.3",
        "1/3": "1.33",
        "4/11": "1.364",
        "2/5": "1.4",
        "4/9": "1.444",
        "10/11": "1.45",
        "1/2": "1.5",
        "8/15": "1.533",
        "4/7": "1.571",
        "8/13": "1.615",
        "4/6": "1.667",
        "8/11": "1.727",
        "4/5": "1.8",
        "5/6": "1.833",
        "10/11": "1.909",
        "1/1": "2.0",
        "11/10": "2.1",
        "6/5": "2.2",
        "5/4": "2.25",
        "13/10": "2.3",
        "11/8": "2.375",
        "7/5": "2.40",
        "6/4": "2.5",
        "8/5": "2.60",
        "13/8": "2.63",
        "7/4": "2.75",
        "9/5": "2.80",
        "15/8": "2.88",
        "2/1": "3.0",
        "11/5": "3.2",
        "9/4": "3.25",
        "12/5": "3.4",
        "5/2": "3.5",
        "11/4": "3.75",
        "3/1": "4.0",
        "10/3": "4.333",
        "7/2": "4.5",
        "4/1": "5.0",
        "9/2": "5.5",
        "5/1": "6.0",
        "11/2": "6.5",
        "6/1": "7.0",
        "13/2": "7.5",
        "7/1": "8.0",
        "15/2": "8.5",
        "8/1": "9.0",
        "17/2": "9.5",
        "9/1": "10.0",
        "10/1": "11.0",
        "11/1": "12.0",
        "12/1": "13.0",
        "14/1": "15.0",
        "16/1": "17.0",
        "20/1": "21.0",
        "25/1": "26.0",
        "33/1": "34.0",
        "40/1": "41.0",
        "50/1": "51.0",
        "66/1": "67.0",
        "100/1": "101.0",
      },
      function (o, s) {
        (s = parseFloat(s).toFixed(e)), t == s && (a = o);
      }
    ),
    "" == a)
  ) {
    var o = t - 1;
    o = o.toFixed(e);
    var s = (remainder = 0);
    do remainder = (o * ++s) % 1;
    while (0 != remainder);
    a = o * s + "/" + s;
  }
  return a;
}
function countDecimals(t) {
  return Math.floor(t) === t ? 0 : t.toString().split(".")[1].length || 0;
}
function calculate_gcd(t, e) {
  return e ? (gcd = calculate_gcd(e, t % e)) : t;
}
function round_two_digit(t) {
  return (
    (t + ".").split(".")[1].length > 0 &&
      (t = (Math.round(100 * t) / 100).toFixed(2)),
    t
  );
}
function Validate(t) {
  var e = RegExp("^[0-9-+./]"),
    a = String.fromCharCode(t.charCode ? t.which : t.charCode);
  13 != t.charCode || e.test(a) || $("#submit_arbitrage").click();
}
function error_message(t = "") {
  for (
    bet_count = $(".arbitrage-bet-row").length,
      "" != t &&
        ($("#" + t).hasClass("error-class") ||
          $("#" + t)
            .attr("placeholder", "Please Enter Valid Bet " + t.replace("odds_", "") + " Odds")
            .addClass("error-class")
            .val("")),
      i = 1;
    i <= bet_count;
    i++
  )
    "" == t &&
      ($("#odds_" + i).hasClass("error-class") ||
        $("#odds_" + i)
          .attr("placeholder", "Please Enter Valid Bet " + i + " Odds")
          .addClass("error-class")
          .val("")),
      $("#stake_" + i).text("$0.00"),
      $("#payout_" + i).text("$0.00");
  $("#total_payout, #total_profit").text("$0.00"),
    $("#roi").text("0.00"),
    (status = !1);
}
/**
 * Обновляет ссылку, стираем
 */
function update_url(t) {
  /*var e = { url: window.location.href, innerhtml: document.body.innerHTML };
  JSON.stringify(e).length > 1e5
    ? window.history.pushState({ url: window.location.href }, "Arbitrage", t)
    : window.history.pushState(e, "Arbitrage", t);*/
}


function get_sharing_details(t) {
  var e = document.getElementById("copy_content").value;
  e.split(":");
  var a = e,
    o = "";
  return (
    (a = e.split("\n")[0]),
    (o = e.split("\n")[1]),
    { sharing_text: encodeURI(a), sharing_link: encodeURIComponent(o) }
  );
}
$(document).ready(function () {
  $(".whatsapp-btn")
    .attr("disabled", !0)
    .attr("tabindex", -1)
    .css("pointer-events", "none"),
    $(".twitter-btn")
      .attr("disabled", !0)
      .attr("tabindex", -1)
      .css("pointer-events", "none"),
    $(".share-code").hide(),
    "" != $("#total_stake").val() && $("#submit_arbitrage").click();
}),
  $(document).on("click", ".owl-prev, .owl-next", function () {
    $(this).parents("ul.owl-carousel").length > 0 &&
      $(this).parents("ul.owl-carousel").trigger("stop.owl.autoplay"),
      $(this).parents("div.owl-carousel").length > 0 &&
        $(this).parents("div.owl-carousel").trigger("stop.owl.autoplay");
    var t = $(this).attr("class");
    track_user_activity(
      "button_clicked",
      "home",
      "sportsbook_nav_clicked",
      (t = t.replace("owl-", "").toLowerCase())
    );
  }),
  $(document).on("click", ".claim-now-btn", function () {
    var t = $(this).data("promotion");
    track_user_activity(
      "button_clicked",
      "home",
      "claim_now_clicked",
      (t = t.replace(/ /g, "_").toLowerCase())
    );
  }),
  $(document).on("keyup", ".form-input", function () {
    var t = $(this).attr("id");
    field_name = t.split("_");
    var e = $("#" + t).val(),
      a = !1;
    "" != $("#" + t).val() && void 0 != $("#" + t).val() && (a = !0);
    var o = !0,
      s = /^[0-9\/.+-]+$/;
    "total_stake" == t
      ? "" == e ||
        void 0 == e ||
        s.test(e) ||
        ((o = !1),
        $("#" + t)
          .attr("placeholder", "Please Enter valid Stake")
          .addClass("error-class")
          .val(""))
      : "" == e ||
        void 0 == e ||
        s.test(e) ||
        ((o = !1),
        $("#" + t)
          .attr(
            "placeholder",
            "Please Enter valid Bet " + field_name[1] + " Odds"
          )
          .addClass("error-class")
          .val(""));
  }),
  $(document).on("click", ".sidebar-nav-click", function (t) {
    var e = $(this).data("sidebar_nav");
    track_user_activity(
      "link_clicked",
      "home",
      "sidebar_navigation_clicked",
      (e = e.replace(/ /g, "_").toLowerCase())
    );
  }),
  $(document).on("click", ".wager-term-click", function (t) {
    var e = $(this).data("wager_term");
    track_user_activity(
      "link_clicked",
      "home",
      "wagering_term_clicked",
      (e = e.replace(/ /g, "_").toLowerCase())
    );
  }),
  $(document).on("click, focus", ".form-input", function (t) {
    var e = $(this).attr("placeholder");
    track_user_activity(
      "field_clicked",
      "home",
      "input_field_clicked",
      (e = e.replace(/ /g, "_").toLowerCase())
    );
  }),
  $(document).on("click", ".w-vulcan-v2-button", function (t) {
    var e = $(this).attr("title");
    ("Play Video" != e && void 0 !== e) ||
      track_user_activity(
        "video_clicked",
        "home",
        "video_played",
        "how_to_use_the_arbitrage_calculator"
      );
  }),
  $(document).on("click", ".w-vulcan-v2-button", function (t) {
    var e = $(this).attr("title");
    ("Play Video" != e && void 0 !== e) ||
      track_user_activity(
        "video_clicked",
        "home",
        "video_played",
        "how_to_use_the_arbitrage_calculator"
      );
  }),
  $(document).ready(function (t) {
    $("#quick-scroll").perfectScrollbar(), get_promo_offers();
  }),
  $(document).on("click", ".sportsbooks-state-menu ul li", function (t) {
    $(".sportsbooks-state-menu ul li").removeClass("active"),
      $(this).parent("li").addClass("active"),
      $(".sportsbooks-state-menu>span").html($(this).html()),
      get_promo_offers();
    var e = $(this).data("location");
    track_user_activity(
      "field_clicked",
      "home",
      "dropdown_option_clicked",
      (e = e.replace(/ /g, "_").toLowerCase())
    );
  }),
  $(document).on("click", ".owl-prev, .owl-next", function () {
    $(this).parents("ul.owl-carousel").length > 0 &&
      $(this).parents("ul.owl-carousel").trigger("stop.owl.autoplay"),
      $(this).parents("div.owl-carousel").length > 0 &&
        $(this).parents("div.owl-carousel").trigger("stop.owl.autoplay");
  }),


	/*====================== On Submit ======================*/
  $("#submit_arbitrage").on("click", function () {
		$("#submit_arbitrage").addClass("active");
		bet_status = validate_bet();
	  stake_validate = validate_stake();
		total_stake = $("#total_stake").val();
		setRoundInfo();
		if ("true" != bet_status && 1 != bet_status || 1 != stake_validate) {
			/*=== If Error Occured ===*/
      for (bet_count = $(".arbitrage-bet-row").length, i = 1; i <= bet_count; i++)
        $("#stake_" + i).text("$0.00"), $("#payout_" + i).text("$0.00");
      $("#total_payout, #total_profit").text("$0.00"), $("#roi").text("0.00");
			/*=== If Error Occured ===*/
    } else {
		  /*=== Else ===*/
			calculate_bet_stake();
		  /*=== Else ===*/
		}
		var t = window.location.href;
		var e = $("#roi").text();
    if ("" != window.location.search) {
      ($(".copy_content").val(
          "This arbitrage bet returns a " + e + " ROI:\n" + t
        ),
        $(".whatsapp-btn")
          .attr("disabled", !1)
          .removeAttr("tabindex")
          .css("pointer-events", "auto"),
        $(".twitter-btn")
          .attr("disabled", !1)
          .removeAttr("tabindex")
          .css("pointer-events", "auto"),
        $(".share-code").show())
		} else {
			($(".copy_content").val(""),
        $(".whatsapp-btn")
          .attr("disabled", !0)
          .attr("tabindex", -1)
          .css("pointer-events", "none"),
        $(".twitter-btn")
          .attr("disabled", !0)
          .attr("tabindex", -1)
          .css("pointer-events", "none"),
        $(".share-code").hide());
		}
  }),
	/*====================== On Submit ======================*/




  $(document).on("click", "#reset", function () {
    for (bet_count = $(".arbitrage-bet-row").length, i = 1; i <= bet_count; i++)
      $("#stake_" + i).text("$0.00"),
        $("#payout_" + i).text("$0.00"),
        $("#odds_" + i).attr("placeholder", "Enter Bet " + i + " Odds.");
    $(".more_rows").remove(),
      $("#total_payout, #total_profit").text("$0.00"),
      $("#roi").text("0.00%"),
      $('input[type="text"]').not("#field_id").val("").removeClass("error-class"),
      track_user_activity(
        "button_clicked",
        "home",
        "clicked_button_name",
        "reset"
      ),
      update_url($("#base_url").val()),
      $("#submit_arbitrage").removeClass("active"),
      $("#copy_content").val(""),
      $(".copy-code").trigger("click"),
      $(".copy-code").html('<i class="fa fa-file-o"></i> <span>Copy</span>'),
      $(".whatsapp-btn")
        .attr("disabled", !0)
        .attr("tabindex", -1)
        .css("pointer-events", "none"),
      $(".twitter-btn")
        .attr("disabled", !0)
        .attr("tabindex", -1)
        .css("pointer-events", "none"),
      $(".share-code").hide();
  }),
  $(document).on("click", "#add_more", function () {
    var t = parseInt($(".arbitrage-bet-row:last").attr("data-id")),
      e =
        '<div class="col-input-block more_rows arbitrage-bet-row" data-id="' +
        (t += 1) +
        '">							<label>Bet ' +
        t +
        '</label>							<div class="input-odds"><input maxlength="10" class="form-input" type="text" id="odds_' +
        t +
        '" placeholder="Please Enter Bet ' +
        t +
        ' Odds" onkeypress="return Validate(event)">							</div>						</div>';
    $(".bet-row").append(e),
      $(".stake-row").append(
        '<h5 class="odds-title title-mob more_rows" id="stake_title_' +
          t +
          '">Stake Bet ' +
          t +
          '</h5><div class="input-text more_rows"> <span class="text-input" id="stake_' +
          t +
          '">$0.00 </span> </div>'
      ),
      $(".payout-row").append(
        '<h5 class="odds-title title-mob more_rows" id="payout_title_' +
          t +
          '">Payout Bet ' +
          t +
          '</h5><div class="input-text more_rows"> <span class="text-input" id="payout_' +
          t +
          '">$0.00 </span> </div>'
      ),
      track_user_activity(
        "button_clicked",
        "home",
        "clicked_button_name",
        "more_rows"
      );
  }),
  $("input[type=text]").keypress(function () {
    $(this).removeClass("error-class");
  }),
  $("input[type=text]").click(function () {
    $(this).removeClass("error-class");
  }),
  $(document).on("click", ".whatsapp-btn", function () {
    ({}.whatsapp_share = "Y");
    var t = get_sharing_details("whatsapp"),
      e = `https://api.whatsapp.com/send?phone=&text=${t.sharing_text}%0A‎${t.sharing_link}`;
    window.open(e, "_blank");
  }),
  $(document).on("click", ".twitter-btn", function () {
    ({}.twitter_share = "Y");
    var t = get_sharing_details("twitter"),
      e = `https://twitter.com/intent/tweet?url=${t.sharing_link}&text=${t.sharing_text}`;
    window.open(e, "_blank");
  });
